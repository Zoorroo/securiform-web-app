{% extends 'base.html.twig' %}

{% block title %}Modifier la Tâche - SECURIFORM{% endblock %}

{% block page_title %}MODIFIER LA TÂCHE{% endblock %}

{% block body %}
    <style>
        .task-form {
            max-width: 800px;
            margin: 0 auto;
        }

        .form-section {
            background: white;
            border-radius: 8px;
            padding: 30px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .section-title {
            color: #333;
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 20px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group:last-child {
            margin-bottom: 0;
        }

        .form-group.full-width {
            grid-column: 1 / -1;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            color: #333;
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary-color);
        }

        textarea.form-control {
            min-height: 100px;
            resize: vertical;
        }

        .form-actions {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }

        .action-buttons {
            display: flex;
            gap: 10px;
        }

        .btn-cancel {
            padding: 10px 20px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background: white;
            color: #666;
            text-decoration: none;
        }

        .btn-cancel:hover {
            background: #f5f5f5;
            color: #333;
            text-decoration: none;
        }

        .btn-save {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            background: var(--primary-color);
            color: white;
            cursor: pointer;
        }

        .btn-save:hover {
            background: #a00000;
        }

        .btn-delete {
            padding: 10px 20px;
            border: 1px solid var(--primary-color);
            border-radius: 4px;
            background: white;
            color: var(--primary-color);
            cursor: pointer;
        }

        .btn-delete:hover {
            background: #fff5f5;
        }

        .required::after {
            content: " *";
            color: var(--primary-color);
        }

        .form-help {
            font-size: 12px;
            color: #666;
            margin-top: 4px;
        }

        .type-options {
            display: flex;
            gap: 20px;
            margin-top: 10px;
        }

        .type-option {
            flex: 1;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            cursor: pointer;
            text-align: center;
            transition: all 0.2s;
        }

        .type-option:hover {
            border-color: var(--primary-color);
        }

        .type-option.active {
            background: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }

        .type-option i {
            font-size: 24px;
            margin-bottom: 10px;
        }

        .task-status {
            display: inline-block;
            padding: 5px 10px;
            border-radius: 4px;
            font-size: 14px;
            margin-bottom: 20px;
        }

        .task-status.completed {
            background: #d4edda;
            color: #155724;
        }

        .task-status.pending {
            background: #fff3cd;
            color: #856404;
        }

        .task-status.overdue {
            background: #f8d7da;
            color: #721c24;
        }
    </style>

    <div class="task-form">
        {{ form_start(form) }}
            <div class="form-section">
                <h3 class="section-title">Informations de la tâche</h3>

                {% if task.completed %}
                    <div class="task-status completed">Terminée</div>
                {% elseif task.isOverdue %}
                    <div class="task-status overdue">En retard</div>
                {% else %}
                    <div class="task-status pending">En cours</div>
                {% endif %}
                
                <div class="form-group">
                    <label class="form-label required">Titre</label>
                    {{ form_widget(form.title, {'attr': {'class': 'form-control'}}) }}
                </div>

                <div class="form-group">
                    <label class="form-label">Description</label>
                    {{ form_widget(form.description, {'attr': {'class': 'form-control'}}) }}
                </div>

                <div class="form-group">
                    <label class="form-label required">Type de tâche</label>
                    <div class="type-options">
                        <div class="type-option" data-value="general">
                            <i class="fas fa-tasks"></i>
                            <div>Général</div>
                        </div>
                        <div class="type-option" data-value="reminder_client">
                            <i class="fas fa-building"></i>
                            <div>Rappel client</div>
                        </div>
                        <div class="type-option" data-value="reminder_trainer">
                            <i class="fas fa-chalkboard-teacher"></i>
                            <div>Rappel formateur</div>
                        </div>
                    </div>
                    {{ form_widget(form.type, {'attr': {'class': 'hidden'}}) }}
                </div>
            </div>

            <div class="form-section">
                <h3 class="section-title">Planification</h3>
                
                <div class="form-grid">
                    <div class="form-group">
                        <label class="form-label required">Date d'échéance</label>
                        {{ form_widget(form.dueDate, {'attr': {'class': 'form-control'}}) }}
                    </div>

                    <div class="form-group">
                        <label class="form-label">Assigné à</label>
                        {{ form_widget(form.assignedTo, {'attr': {'class': 'form-control'}}) }}
                    </div>
                </div>
            </div>

            <div class="form-section">
                <h3 class="section-title">Session associée</h3>
                
                <div class="form-group">
                    <label class="form-label">Formation</label>
                    {{ form_widget(form.relatedSession, {'attr': {'class': 'form-control'}}) }}
                    <div class="form-help">Optionnel - Sélectionnez une session de formation si cette tâche y est liée</div>
                </div>
            </div>

            <div class="form-actions">
                <form method="post" action="{{ path('app_task_delete', {'id': task.id}) }}" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cette tâche ?');">
                    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ task.id) }}">
                    <button type="submit" class="btn-delete">Supprimer la tâche</button>
                </form>
                
                <div class="action-buttons">
                    <a href="{{ path('app_task_index') }}" class="btn-cancel">Fermer</a>
                    <button type="submit" class="btn-save">Enregistrer les modifications</button>
                </div>
            </div>
        {{ form_end(form) }}
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const typeOptions = document.querySelectorAll('.type-option');
            const typeInput = document.querySelector('#{{ form.type.vars.id }}');

            // Set initial active state
            typeOptions.forEach(option => {
                if (option.dataset.value === typeInput.value) {
                    option.classList.add('active');
                }
            });

            // Handle type selection
            typeOptions.forEach(option => {
                option.addEventListener('click', () => {
                    typeOptions.forEach(opt => opt.classList.remove('active'));
                    option.classList.add('active');
                    typeInput.value = option.dataset.value;
                });
            });
        });
    </script>
{% endblock %}
